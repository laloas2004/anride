<%- include ../includes/menu %>

<div class="container">

    <div class="row">
        <div class ="col-md-12">
            <div class="page-header">
                <h1>Nueva Solicitud</h1>
                <div>
                    <form role="form" method="POST" novalidate>



                        <div class="panel panel-default">
                            <div class="panel-heading">Direccion Origen</div>
                            <div class="panel-body">
                                <div class="form-group">
                                    <label for="servicio.origen">Origen</label>
                                    <input type="text" class="form-control" id="servicio_origen"
                                           placeholder="Introduce un Origen" name="servicio[origen]" required>
                                    <input type="hidden" class="form-control" id="coords_origen" name="servicio[coords_origen]">
                                </div>
                                <div class="form-group">
                                    <label for="origen_ciudad">Ciudad</label>
                                    <input type="text" class="form-control" id="origen_ciudad" readonly="true">
                                   
                                </div>
                                <div class="form-group">
                                    <label for="origen_estado">Estado</label>
                                    <input type="text" class="form-control" id="origen_estado" readonly="true">

                                </div>
                                <div class="form-group">
                                    <label for="origen_cp">CP</label>
                                    <input type="text" class="form-control" id="origen_cp" readonly="true">

                                </div>
                                
                            <div id="dialog_no_choferes" title="No hay choferes disponibles">
                              <p>Por el momento no hay choferes diponibles en esta zona, intentalo mas tarde.</p>
                            </div>

                            </div>
                        </div>
                        <div class="panel panel-default">
                            <div class="panel-heading">Direccion Destino</div>
                            <div class="panel-body">
                                <div class="form-group">
                                    <label for="cliente.apellido">Destino</label>
                                    <input type="text" class="form-control" id="servicio_destino"
                                           placeholder="Introduce Destino" name="servicio[destino]" required >
                                    <input type="hidden" class="form-control" id="coords_destino" name="servicio[coords_destino]">
                                </div>
                                <div class="form-group">
                                    <label for="origen_ciudad">Ciudad</label>
                                    <input type="text" class="form-control" id="destino_ciudad" readonly="true">

                                </div>
                                <div class="form-group">
                                    <label for="origen_estado">Estado</label>
                                    <input type="text" class="form-control" id="destino_estado" readonly="true">

                                </div>
                                <div class="form-group">
                                    <label for="origen_cp">CP</label>
                                    <input type="text" class="form-control" id="destino_cp" readonly="true">

                                </div>
                            </div>
                        
                        <div id="dialog_no_origen" title="Origen necesario">
                              <p>Es necesario introducir un origen primero.</p>
                        </div>
                        
                        
                        
                        
                        </div>

                        <div class="panel panel-default">
                            <div class="panel-heading">Datos del Cliente</div>
                            <div class="panel-body">

                                <div class="form-group">
                                    <label for="cliente.email">Numero Celular</label>
                                    <input type="email" class="form-control" id="cliente.email"
                                           placeholder="Introduce un Email" name="cliente[email]" required style="text-transform: lowercase;">
                                </div>
                                <div class="form-group">
                                    <label for="cliente.email">Correo electronico</label>
                                    <input type="email" class="form-control" id="cliente.email"
                                           placeholder="Introduce un Email" name="cliente[email]" required style="text-transform: lowercase;">
                                </div>
                            </div></div>

                        
                    </form>
                    
                    <button class="btn btn-primary btn-lg btn-block" id="btn_enviar"> Enviar Solicitud </button>

                    <div id="map" style="height:450px;margin-top:10px;" class="col-md-12"></div> 
                </div>
            </div>


        </div>
            
    </div>
    
    <div id="dialog-confirm" title="Enviar solicitud de Viaje.">
  
      
            <div class="form-group" style="padding: 50px;">
                 <div class="row">
                    <label for="txt_tiempo">Tiempo estimado:</label>  
                     <input type="text" class="form_control" id="txt_tiempo" readonly ></div>
                 <div class="row">
                     <label for="txt_distancia">Distancia estimada:</label>  
                     <input type="text" class="form_control" id="txt_distancia" disabled ></div>
                 <div class="row">
                      <label for="txt_estimado">Costo estimado:</label>  
                     <input type="text" class="form_control" id="txt_estimado" disabled ></div>

            </div>
  

    </div>
        
</div>
       <%- include ../includes/footer %>

        <script>

            var placeSearch, autocomplete, autocomplete_origen, autocomplete_destino;
            var placeOrigen = null;
            var placeDestino = null;
            var choferMarker = [];
            var solicitud = { 
                        _solicitudData:{},
                        _choferes:[],
                        _matrix:null,
                        _origen:null,
                        _destino:null,
                        _direccion_origen:'',
                        _direccion_destino:'',
                        _estimado:{},
                        getChoferes:function(place, cb){
                           
                            that = this;
                       
                           var data = { lon:place.geometry.location.lng(), lat:place.geometry.location.lat() };
                            
                           io.socket.get("/cliente/choferes", data, function (resData, jwres){
                               
                               if(!resData.error){
                                    that._choferes = resData.choferes;
                                    cb(resData);
                               
                               }else{
                                    console.log(resData);
                                    cb(false);  
                               }
                            
                                
                                });     
                        },
                        getMatrix:function(placeOrigen, placeDestino,cb){
                            
                            cb = cb || function(){};
                            
                            var geocoder = new google.maps.Geocoder;
                            var service = new google.maps.DistanceMatrixService;
                            
                            service.getDistanceMatrix({
                                                        origins: [{lat:placeOrigen.geometry.location.lat(),lng:placeOrigen.geometry.location.lng()}],
                                                        destinations: [{lat:placeDestino.geometry.location.lat(),lng:placeDestino.geometry.location.lng()}],
                                                        travelMode: 'DRIVING',
                                                        unitSystem: google.maps.UnitSystem.METRIC,
                                                        avoidHighways: false,
                                                        avoidTolls: false
                                                      }, function(response, status) {
                                                        if (status !== 'OK') {
                                                          alert('Error was: ' + status);
                                                        } else {
                                                            
                                                          that._matrix = response;

                                                            } 
                                                        });
                            
                          cb();  
                        },
                        enviarSolicitud:function(){
                            
                            that = this;
                            
                            that_validarSolicitud(function(){
                                
                                
                                alert('validaciones ok');
                                
                            });

                        },
                        setOrigen:function(origen){
                         that = this;
                         
                         that._origen = { coords: {
                            latitude: origen.geometry.location.lat(),
                            longitude: origen.geometry.location.lng()
                        }};
                        
                        that._direccion_origen = origen.formatted_address;
                         
                        },
                        setDestino:function(destino){
                          that = this;

                          that._destino = { coords: {
                            latitude: destino.geometry.location.lat(),
                            longitude: destino.geometry.location.lng()
                             }};
                    
                        that._direccion_destino = destino.formatted_address;
                        },
                        _validarSolicitud:function(next){
                            
                            that = this;
                            debugger;
                            if(that._choferes.length > 0 ){
                                
                               console.log('No hay choferes disponibles');
                               return false;
                                
                            }
                            
                            next();

                        },
                        calcularEstimado:function(next){
                        that = this;    
                        next = next || function(){};
                        
                            if(that._matrix == null){
                                
                                console.log('_matrix no esta definido.');
                                return false;
                            }
                            
                        try {

                                var tiempo = that._matrix.rows[0].elements[0].duration.value || 0;
                                var distancia = that._matrix.rows[0].elements[0].distance.value || 0;

                        } catch (e) {

                                console.error(e);

                        }
                        
                        var data = {
                            distancia:distancia,
                            tiempo:tiempo,
                        };
                    
                        io.socket.post("/monto/estimado",data,function(response){
                            
                            that._estimado = response;
                            
                            next(response);
                            
                        });
                    
                            
                            
                        }
            
                     };


  function initMap() {
      
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
                
                
            var componentForm_origen = {
                street_number: 'short_name',
                route: 'long_name',
                locality: 'long_name',
                administrative_area_level_1: 'short_name',
                country: 'long_name',
                postal_code: 'short_name'
            };
            
            var componentForm_origen = {
                street_number: 'short_name',
                route: 'long_name',
                locality: 'long_name',
                administrative_area_level_1: 'short_name',
                country: 'long_name',
                postal_code: 'short_name'
            };
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                      var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude

                      };

                          map = new google.maps.Map(document.getElementById('map'), {
                              center: {lat:pos.lat, lng:pos.lng},
                              zoom: 12
                          }); 
                      });  
                }else{
        
                 map = new google.maps.Map(document.getElementById('map'), {
                    center: {lat: 25.747215080976115, lng: -100.29709576508179},
                    zoom: 12
                });
        
            }
 

                
                
                var options = {
                                //types: ['(cities)'],
                                types: ['geocode','establishment'],
                                componentRestrictions: {country: "mx"}
                               };

                // Create the autocomplete object, restricting the search to geographical
                // location types.
                autocomplete_origen = new google.maps.places.Autocomplete(
                        /** @type {!HTMLInputElement} */(document.getElementById('servicio_origen')),
                        options);

                autocomplete_destino = new google.maps.places.Autocomplete(
                        /** @type {!HTMLInputElement} */(document.getElementById('servicio_destino')),
                        options);

                // When the user selects an address from the dropdown, populate the address
                // fields in the form.
                autocomplete_origen.addListener('place_changed', fillInAddress_origen);
                autocomplete_destino.addListener('place_changed', fillInAddress_destino);
                
                

            function fillInAddress_origen() {
                
                 placeOrigen = autocomplete_origen.getPlace();
                
                for (var i = 0; i < placeOrigen.address_components.length; i++) {

                    var addressType = placeOrigen.address_components[i].types[0];
                    
                    
                    if(addressType == "locality"){
                        
                       setCiudadOrigen(placeOrigen.address_components[i].long_name); 
                    }
                    if(addressType == "administrative_area_level_1"){
                        
                       setEstadoOrigen(placeOrigen.address_components[i].long_name); 
                    }
                    
                    if(addressType == "postal_code"){
                        
                       setCPOrigen(placeOrigen.address_components[i].long_name); 
                    }
                    

                   
                }
                
                
               calculateAndDisplayRoute(map, directionsService, directionsDisplay, placeOrigen, placeDestino,function(res){
                   
                  solicitud.getChoferes(placeOrigen,function(res){
                      
                     if(!res){
                         
                        $( "#dialog_no_choferes" ).dialog("open");
                        
                        placeOrigen = null;
                        placeDestino = null;
                        
                        $('#servicio_origen').val('');
                        $('#servicio_destino').val('');
                        clearChoferesMarkers(map,function(){
                            
                            
                        });
                        
                        
                         return false;
                     } 
                     
                     addChoferesMarkers(map,function(){
                         
                         
                         
                         
                     });
                     
                      
                  });
                   
               });
                   
               
            }
            
            function setCiudadOrigen(ciudad){
                
                $('#origen_ciudad').val('');
                
                if(ciudad){
                    
                 console.log(ciudad);
                
                $('#origen_ciudad').val(ciudad);
                    
                }
                
                
            }
            
            function setEstadoOrigen(estado){
                
                  $('#origen_estado').val('');
                
                if(estado){
                    
                 console.log(estado);
                
                $('#origen_estado').val(estado);
                    
                }
                
            }
            
            function setCPOrigen(cp){
                
                $('#origen_cp').val('');
                
                if(cp){
                    
                 console.log(cp);
                
                $('#origen_cp').val(cp);
                    
                }
                
            }
            
            
            
            function fillInAddress_destino() {
                
                if(placeOrigen == null){
                    
                    $( "#dialog_no_origen" ).dialog("open");
                    return false;
                }
                
                    placeDestino = autocomplete_destino.getPlace();
               
                for (var i = 0; i < placeDestino.address_components.length; i++) {

                    var addressType = placeDestino.address_components[i].types[0];

                                       
                    if(addressType == "locality"){
                        
                       setCiudadDestino(placeDestino.address_components[i].long_name); 
                    }
                    if(addressType == "administrative_area_level_1"){
                        
                       setEstadoDestino(placeDestino.address_components[i].long_name); 
                    }
                    
                    if(addressType == "postal_code"){
                        
                       setCPDestino(placeDestino.address_components[i].long_name); 
                    }
                }
                
                calculateAndDisplayRoute(map, directionsService, directionsDisplay, placeOrigen, placeDestino,function(){
                    
                    
                    
                });
                    
                    
              
            }
            
            function setCiudadDestino(ciudad){
                
                $('#destino_ciudad').val('');
                
                if(ciudad){
                    
                 console.log(ciudad);
                
                $('#destino_ciudad').val(ciudad);
                    
                }
                
            }
            
            function setEstadoDestino(estado){
                
                  $('#destino_estado').val('');
                
                if(estado){
                    
                 console.log(estado);
                
                $('#destino_estado').val(estado);
                    
                }
                
            }
            
            function setCPDestino(cp){
                
                $('#destino_cp').val('');
                
                if(cp){
                    
                 console.log(cp);
                
                $('#destino_cp').val(cp);
                    
                }
                
            }
            
            function addChoferesMarkers(map,cb){
                
               var image = '/images/car-icon.png';
               
               clearChoferesMarkers(map,function(){
                   
                   solicitud._choferes.forEach(function(item,index){
                   
                            choferMarker[index] = new google.maps.Marker({
                                               position: {lat:item.lat, lng:item.lon},
                                               map: map,
                                               icon: image
                                             });
                   
                        }); 
                   
                       
               });
              
               
               cb();
                
                
            }
            
            function clearChoferesMarkers(map,cb){
                
               choferMarker.forEach(function(item,index){
                   
                   item.setMap(null);
                   
               }); 
               
               choferMarker = [];
            
            cb();
                
            }
            
            function calculateAndDisplayRoute(map, directionsService, directionsDisplay, placeOrigen, placeDestino, cb){
               
               directionsDisplay.setMap(map);
               

               if(placeOrigen != null && placeDestino != null){
                   
                                   
                directionsService.route({
                                            origin:{'placeId': placeOrigen.place_id},
                                            destination:{'placeId': placeDestino.place_id},
                                            travelMode: 'DRIVING'
                                          }, function(response, status) {
                                            if (status === 'OK') {
                                           
                                              directionsDisplay.setDirections(response);
                                              
                                              solicitud.getMatrix(placeOrigen, placeDestino,function(){
                                                  
                                                  solicitud.setOrigen(placeOrigen);
                                                  solicitud.setDestino(placeDestino);
                                                  
                                              });
                                              
                                            } else {
                                              window.alert('Directions request failed due to ' + status);
                                            }
                                          });
                                          
                                          
                                          cb();
                   
                   
               }else{
                cb(); 
            }
                

                
            }
            
            

            }





            $(document).ready(function () {
                
                $( "#dialog_no_choferes" ).dialog({
                             autoOpen: false,
                         });
                         
                $( "#dialog_no_origen" ).dialog({
                             autoOpen: false,
                         });
                         
                $( "#dialog-confirm" ).dialog({
                                        resizable: false,
                                        height: "auto",
                                        width: "auto",
                                        modal: true,
                                        autoOpen: false,
                                        buttons: {
                                          "Continuar": function() {
                                            
                                            solicitud.enviarSolicitud(function(response){
                                                
                                                
                                                
                                            });
                                          },
                                          "Cancelar" : function() {
                                            $( this ).dialog( "close" );
                                          }
                  }
            });
                         
                $('#btn_enviar').click(function(){
                    
                    solicitud.calcularEstimado(function(res){
                        $('#txt_tiempo').val(solicitud._matrix.rows[0].elements[0].duration.text);
                        $('#txt_distancia').val(solicitud._matrix.rows[0].elements[0].distance.text);
                        $('#txt_estimado').val('$ '+ res.montoEstimado.toFixed(2) +' MXN');
                        
                        $( "#dialog-confirm" ).dialog("open");
                        
                        
                        
                        
                    });
                });         
                         


            });




        </script>

        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCWp8rfTpYiFsnn2tLEx4VupIqkLCqQllA&libraries=places&callback=initMap"
                async defer>
        </script>
